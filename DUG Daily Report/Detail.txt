SELECT C.ENTRY_CODE, C. TC_PURCHASE_ORDERS_ID, C.PURCHASE_ORDERS_STATUS,
(CASE WHEN C.FACILITY_TZ = 3 
THEN (C.REQUESTED_DLVR_DTTM + (120/1440))
WHEN C.FACILITY_TZ = 4 
THEN (C.REQUESTED_DLVR_DTTM + (60/1440))
WHEN C.FACILITY_TZ = 6 
THEN (C.REQUESTED_DLVR_DTTM - (60/1440))
WHEN C.FACILITY_TZ = 7 
THEN (C.REQUESTED_DLVR_DTTM - (120/1440))
WHEN C.FACILITY_TZ = 8 
THEN (C.REQUESTED_DLVR_DTTM - (180/1440))
ELSE C.REQUESTED_DLVR_DTTM
END) PICKUP_START_TIME,
(CASE WHEN C.FACILITY_TZ = 3 
THEN (C.CREATED_DTTM + (120/1440))
WHEN C.FACILITY_TZ = 4 
THEN (C.CREATED_DTTM + (60/1440))
WHEN C.FACILITY_TZ = 6 
THEN (C.CREATED_DTTM - (60/1440))
WHEN C.FACILITY_TZ = 7 
THEN (C.CREATED_DTTM - (120/1440))
WHEN C.FACILITY_TZ = 8 
THEN (C.CREATED_DTTM - (180/1440))
ELSE C.CREATED_DTTM
END) ORDER_PLACED_IN_EOM,
(CASE WHEN C.PURCHASE_ORDERS_STATUS = 850
THEN(CASE WHEN C.FACILITY_TZ = 3 
THEN (C.LAST_UPDATED_DTTM + (120/1440))
WHEN C.FACILITY_TZ = 4 
THEN (C.LAST_UPDATED_DTTM + (60/1440))
WHEN C.FACILITY_TZ = 6 
THEN (C.LAST_UPDATED_DTTM - (60/1440))
WHEN C.FACILITY_TZ = 7 
THEN (C.LAST_UPDATED_DTTM - (120/1440))
WHEN C.FACILITY_TZ = 8 
THEN (C.LAST_UPDATED_DTTM - (180/1440))
ELSE C.LAST_UPDATED_DTTM
END)
ELSE (NULL)
END)ORDER_COMPLETE_IN_EOM,
(CASE WHEN C.FACILITY_TZ = 3 
THEN (C.ORDER_DROP + (120/1440))
WHEN C.FACILITY_TZ = 4 
THEN (C.ORDER_DROP + (60/1440))
WHEN C.FACILITY_TZ = 6 
THEN (C.ORDER_DROP - (60/1440))
WHEN C.FACILITY_TZ = 7 
THEN (C.ORDER_DROP - (120/1440))
WHEN C.FACILITY_TZ = 8 
THEN (C.ORDER_DROP - (180/1440))
ELSE C.ORDER_DROP
END) ORDER_DROPPED,
(CASE WHEN C.PURCHASE_ORDERS_STATUS = 850 
THEN (CASE WHEN C.CREATED_MINS>171
      THEN (CASE WHEN C.DROP_DIFF>164
            THEN (CASE WHEN C.COMPLETE_MINS>-1
                  THEN ('On time, no issues')
                  ELSE ('Order staged late')
                  END
                  )
            ELSE ('Late order drop')
            END
            )
      ELSE ('Order created late')
      END
      )
WHEN C.PURCHASE_ORDERS_STATUS < 850  AND C.PURCHASE_ORDERS_STATUS > 400
THEN (CASE WHEN C.CREATED_MINS>171
      THEN (CASE WHEN C.DROP_DIFF>164
            THEN (CASE WHEN C.REQUESTED_DLVR_DTTM>SYSDATE
                  THEN ('In picking within pick window')
                  ELSE ('Order not staged')
                  END
                  )
            ELSE ('Late order drop')
            END
            )
      ELSE ('Order created late')
      END
      )    
WHEN C.PURCHASE_ORDERS_STATUS = 940 
THEN (CASE WHEN C.CREATED_MINS>171
      THEN (CASE WHEN C.ORDER_DROP IS NOT NULL
            THEN ('Order Cancelled by store')
            ELSE ('Order Cancelled by Customer')
            END
            )
      ELSE ('Order created late and Cancelled')
      END
      )
WHEN C.PURCHASE_ORDERS_STATUS = 400 
THEN (CASE WHEN C.REQUESTED_DLVR_DTTM>(SYSDATE+(180/1440))
      THEN ('Future Order')
      ELSE ('Order did not drop')
      END
      )      
ELSE ('ERROR_SCENARIO')
END) ISSUE,
C.TIME_ZONE_DISPLAY_NAME, C.STATE_PROV
FROM 
(SELECT A.*, B.*,
(CASE WHEN B.ORDER_DROP = NULL 
THEN (9999)
ELSE CAST((A.REQUESTED_DLVR_DTTM-B.ORDER_DROP)*24*60 AS FLOAT)
END) DROP_DIFF, F.*
FROM (SELECT ENTRY_CODE, TC_PURCHASE_ORDERS_ID, REQUESTED_DLVR_DTTM, (TO_DATE(TO_CHAR(CREATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')) AS CREATED_DTTM, (TO_DATE(TO_CHAR(LAST_UPDATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')) AS LAST_UPDATED_DTTM, PURCHASE_ORDERS_STATUS, CAST((REQUESTED_DLVR_DTTM-(TO_DATE(TO_CHAR(CREATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')))*24*60 AS FLOAT) AS CREATED_MINS, CAST((REQUESTED_DLVR_DTTM-(TO_DATE(TO_CHAR(LAST_UPDATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')))*24*60 AS FLOAT) AS COMPLETE_MINS 
FROM PURCHASE_ORDERS WHERE ORDER_CATEGORY=62 AND TRUNC(REQUESTED_DLVR_DTTM)=TRUNC(SYSDATE) AND PURCHASE_ORDERS_STATUS=850 AND LENGTH(TC_PURCHASE_ORDERS_ID)>5
UNION ALL 
SELECT ENTRY_CODE, TC_PURCHASE_ORDERS_ID, REQUESTED_DLVR_DTTM, (TO_DATE(TO_CHAR(CREATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')) AS CREATED_DTTM, (TO_DATE(TO_CHAR(LAST_UPDATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')) AS LAST_UPDATED_DTTM, PURCHASE_ORDERS_STATUS, CAST((REQUESTED_DLVR_DTTM-(TO_DATE(TO_CHAR(CREATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')))*24*60 AS FLOAT) AS CREATED_MINS, CAST((REQUESTED_DLVR_DTTM-(TO_DATE(TO_CHAR(LAST_UPDATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')))*24*60 AS FLOAT)*0 AS COMPLETE_MINS 
FROM PURCHASE_ORDERS WHERE ORDER_CATEGORY=62 AND TRUNC(REQUESTED_DLVR_DTTM)=TRUNC(SYSDATE) AND PURCHASE_ORDERS_STATUS<850 AND LENGTH(TC_PURCHASE_ORDERS_ID)>5
UNION ALL
SELECT ENTRY_CODE, TC_PURCHASE_ORDERS_ID, REQUESTED_DLVR_DTTM, (TO_DATE(TO_CHAR(CREATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')) AS CREATED_DTTM, (TO_DATE(TO_CHAR(LAST_UPDATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')) AS LAST_UPDATED_DTTM, PURCHASE_ORDERS_STATUS, CAST((REQUESTED_DLVR_DTTM-(TO_DATE(TO_CHAR(CREATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')))*24*60 AS FLOAT) AS CREATED_MINS, CAST((REQUESTED_DLVR_DTTM-(TO_DATE(TO_CHAR(LAST_UPDATED_DTTM, 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')))*24*60 AS FLOAT)*0 AS COMPLETE_MINS 
FROM PURCHASE_ORDERS WHERE ORDER_CATEGORY=62 AND TRUNC(REQUESTED_DLVR_DTTM)=TRUNC(SYSDATE) AND PURCHASE_ORDERS_STATUS=940 AND LENGTH(TC_PURCHASE_ORDERS_ID)>5) A
LEFT OUTER JOIN
(SELECT EXT_PURCHASE_ORDER, (TO_DATE(TO_CHAR(MIN(CREATED_DTTM), 'mm/dd/yyyy hh24:mi'), 'mm/dd/yyyy hh24:mi')) ORDER_DROP FROM ORDERS WHERE TRUNC(CREATED_DTTM)=TRUNC(SYSDATE)  
GROUP BY EXT_PURCHASE_ORDER) B
ON A.TC_PURCHASE_ORDERS_ID=B.EXT_PURCHASE_ORDER
LEFT OUTER JOIN
(SELECT FA.FACILITY_NAME, FAC.FACILITY_TZ, TZ.TIME_ZONE_DISPLAY_NAME, FAC.STATE_PROV FROM FACILITY_ALIAS FA, FACILITY FAC, TIME_ZONE TZ WHERE FA.FACILITY_ID=FAC.FACILITY_ID AND FAC.FACILITY_TZ=TZ.TIME_ZONE_ID AND FA.FACILITY_NAME NOT IN ('Default Facility')) F
ON A.ENTRY_CODE=F.FACILITY_NAME
) C
ORDER BY C.TIME_ZONE_DISPLAY_NAME, C.STATE_PROV, C.ENTRY_CODE, C.REQUESTED_DLVR_DTTM
